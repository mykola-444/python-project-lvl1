# Generate config for geo nodes distribution report
set -xe

. map-integration-testing/ci/routing/common_functions.sh
source_docker_cfg map-integration-testing/ci/routing/docker_acc.cfg
DOCKER_IMAGE=$MITF_IMAGE

# Variables LDM_REGION_DVN and GENERATORS are from generate-test-cases-dev job:
exit_if_no_env_var LDM_REGION_DVN

set_env_var_if_not_set MITF_PATH /workspace

if [[ ${LDM_REGION_DVN} == HMC_* ]]; then
    CONFIG_TEMPLATE_PATH=map-integration-testing/config/hmc_config_example.cfg
else
    CONFIG_TEMPLATE_PATH=map-integration-testing/config/acceptance_config_example.cfg
fi

CONFIG=${WORKSPACE}/distr_config.cfg
ls -lah ${CONFIG_TEMPLATE_PATH}

if [[ -z ${GENERATORS} ]]; then
    echo "INFO: Generators are not set. Using value from ${CONFIG_TEMPLATE_PATH}"
else
    CONFIG_PARAMS="GENERATORS=${GENERATORS}"
fi

python3 map-integration-testing/ci/routing/create_config.py --params ${CONFIG_PARAMS} \
                                                                "TEST_CASE_NUMBER=${DESIRED_TC_QTY}" \
                                                            --config_template ${CONFIG_TEMPLATE_PATH} \
                                                            --output ${CONFIG}

cat ${CONFIG}

# Unpack artifact from update-acc-tests-dev job:
mkdir -p share/here/routing/spec/ && tar xf robot_specs.tgz -C share/here/routing/spec/

docker pull $DOCKER_IMAGE
trap "{ [ -z $BUILD_TAG ] || docker ps -aq --filter name=$BUILD_TAG | xargs --no-run-if-empty docker rm -f --volumes || true; } &> /dev/null" EXIT
docker run \
    --env=MITF_PATH=$MITF_PATH \
    --env=VIRTUAL_TIMEOUT=2m \
    --env=PYTHONPATH=/workspace/map-integration-testing:/workspace/map-integration-testing/ci/routing \
    --interactive \
    --name=$BUILD_TAG \
    --net=host \
    --rm \
    --user=bldadmin \
    --volume=$WORKSPACE:/workspace \
    --workdir=/workspace \
    $DOCKER_IMAGE \
    python3 map-integration-testing/ci/routing/generate_robot_coverage.py --config /workspace/distr_config.cfg --path_to_robot_libs /workspace/share/here/routing/spec/lib/ --template map-integration-testing/utils/web/templates/xml_coverage.j2 --output /workspace/index.html
