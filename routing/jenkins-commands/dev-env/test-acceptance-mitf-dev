. map-integration-testing/ci/routing/common_functions.sh
source_docker_cfg map-integration-testing/ci/routing/docker_acc.cfg

if test -f robot_specs_filtered.tgz; then
    mv robot_specs_filtered.tgz robot_specs.tgz
fi

# download build artifact from mos.cci
if [[ ${MAP_FORMAT} == "HLS_BRF" ]] || [[ ${MAP_FORMAT} == "HLS_BRF2" ]]; then
    # HLS_BRF JOB: https://hls.cci.in.here.com/job/hls_routing/job/sv/job/build/job/psv-linux-x86-gcc7.2-release/
    # HLS_BRF2 JOB: https://hls.cci.in.here.com/job/hls_routing/job/psv/job/test/job/team-routing/job/brfc2/job/psv-test-acceptance-hlp-json-notraffic-hmc-brf-linux-x86-gcc7.2/
    # HLS DOCKER: 901893201569.dkr.ecr.us-east-1.amazonaws.com/hls/routing.runtime:2017.12-1.0-83f2f7d
    MITF_PATH=/workspace/map-integration-testing/
    DOCKER_IMAGE=$HLS_IMAGE
    wget -N --tries=3 --timeout=120 https://hls.cci.in.here.com/job/hls_routing/job/sv/job/build/job/$SERVER_BUILD_JOB/$SERVER_BUILD_NUMBER/s3/download/build/routing-hls.tar.gz
    mkdir -p test_routing_component
    tar xf routing-hls.tar.gz -C test_routing_component
    mv test_routing_component/share/here/routing/spec test_routing_component/share/here/routing/spec_orig
    mkdir -p test_routing_component/share/here/routing/spec/
    tar xf robot_specs.tgz -C test_routing_component/share/here/routing/spec/
elif [[ ${MAP_FORMAT} == "OLS_BRF" ]] || [[ ${MAP_FORMAT} == "OLS_BRF2" ]]; then
    # OLS_BRF JOB: https://main.gitlab.in.here.com/routing/gemini/-/jobs/1090024
    # OLS_BRF2 JOB: NON-EXISTING YET (in prod)
    # OLS DOCKER: docker-local.artifactory.in.here.com/cci/librouting/test:centos8-1.0-ca389f4
    MITF_PATH=/workspace/map-integration-testing/
    DOCKER_IMAGE=$GEMINI_IMAGE
    curl -L --output artifacts.zip --header "PRIVATE-TOKEN: ${GITLAB_TOKEN}" "https://main.gitlab.in.here.com/api/v4/projects/routing%2Fgemini/jobs/artifacts/master/download?job=gemini"
    unzip artifacts.zip
    mv build/share/here/routing/spec build/share/here/routing/spec_orig
    mkdir -p build/share/here/routing/spec/
    tar xf robot_specs.tgz -C build/share/here/routing/spec/
elif [[ ${MAP_FORMAT} == "F8" ]]; then
    # JOB: https://mos.cci.in.here.com/job/Build-linux64-debug/
    # DOCKER: 901893201569.dkr.ecr.us-east-1.amazonaws.com/mos/ubuntu.runtime.routing.tests.py2:trusty-1.0-2c2a634
    MITF_PATH=/workspace/
    DOCKER_IMAGE=$F8_IMAGE
    wget -N --tries=3 --timeout=120 https://mos.cci.in.here.com/job/$CLIENT_BUILD_JOB/$CLIENT_BUILD_NUMBER/s3/download/build/test_routing_component.tgz
    tar xf test_routing_component.tgz
    mv installdir/share/here/routing/spec installdir/share/here/routing/spec_orig
    mkdir -p installdir/share/here/routing/spec/
    tar xf robot_specs.tgz -C installdir/share/here/routing/spec/
elif [[ ${MAP_FORMAT} == "NDS_SPARTA" ]]; then
    # JOB: https://psv-corenav.cci.in.here.com/job/sparta/job/psv/job/build/job/psv-linux-x86-gcc5.4-release-nds2.5.2/
    # DOCKER: 901893201569.dkr.ecr.eu-west-1.amazonaws.com/sparta/ubuntu.routing.test.python:xenial-gcc5.4-1.0-b8fa489
    MITF_PATH=/workspace/
    DOCKER_IMAGE=$SPARTA_IMAGE
    wget -N --tries=3 --timeout=120 https://psv-corenav.cci.in.here.com/job/sparta/job/psv/job/build/job/$CLIENT_BUILD_JOB/$CLIENT_BUILD_NUMBER/s3/download/build/routing-tests.tar.gz
    tar xf routing-tests.tar.gz
    mv share/here/routing/spec share/here/routing/spec_orig
    mkdir -p share/here/routing/spec/
    tar xf robot_specs.tgz -C share/here/routing/spec/
else
    echo "ERROR: Undetermined/unsupported MAP_FORMAT=${MAP_FORMAT}"
    exit 1
fi

echo "Running tests using generated specs"

docker pull ${DOCKER_IMAGE}
trap "{ [ -z $BUILD_TAG ] || docker ps -aq --filter name=$BUILD_TAG | xargs --no-run-if-empty docker rm -f --volumes || true; } &> /dev/null" EXIT
docker run \
    --cap-add=SYS_ADMIN \
    --shm-size 16g \
    --memory 15G \
    --cpus 2 \
    --env=MAP_PATH_PREFIX=$MAP_PATH_PREFIX \
    --env=BRF_MAP_PATH=$MAP_PATH_PREFIX \
    --env=LDM_REGION_DVN=$LDM_REGION_DVN \
    --env=MAP_FORMAT=$MAP_FORMAT \
    --env=MITF_PATH=$MITF_PATH \
    --env=DRIVER=$DRIVER \
    --env=FORMAT=$FORMAT \
    --env=INCLUDE=$INCLUDE \
    --env=VIRTUAL_TIMEOUT=4m \
    --interactive \
    --name=$BUILD_TAG \
    --net=none \
    --device=/dev/fuse \
    --rm \
    --user=bldadmin \
    --volume=$MAP_PATH_PREFIX:$MAP_PATH_PREFIX:ro \
    --volume=$WORKSPACE:/workspace \
    --workdir=/workspace \
    $DOCKER_IMAGE \
    map-integration-testing/ci/routing/acceptance/run_acc_tests.sh
